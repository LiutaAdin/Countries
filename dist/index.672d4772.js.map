{"mappings":"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","sources":["script.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst searchBtn = document.querySelector(\".search-btn\");\r\nconst randomBtn = document.querySelector(\".random-btn\");\r\nconst countryInp = document.getElementById(\"country-inp\");\r\nconst result = document.getElementById(\"result\");\r\n\r\n//Helper functions\r\n\r\nconst random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min);\r\n\r\n//Country Name\r\n\r\n\r\nconst getCountry = function () {\r\n    let countryValue = countryInp.value;\r\n    let result = document.getElementById(\"result\");\r\n    let countryName = async function (country) {\r\n        const res = await fetch(\r\n            `https://restcountries.com/v3.1/name/${country}`\r\n        );\r\n\r\n        const data = await res.json();\r\n\r\n        try {\r\n            if (!countryValue) throw new Error(`So empty...`);\r\n            if (!data[0]) throw new Error(`Country does not exist! Try again!`);\r\n\r\n            result.innerHTML = `\r\n           <img src=\"${data[0].flags.svg}\" class=\"flag-img\">\r\n           <div class=\"info\">\r\n           <h2>${data[0].name.common}</h2>\r\n           <div class=\"data-info\">\r\n           <h4>Capital:</h4>\r\n           <span>${data[0].capital[0]}</span>\r\n           </div>\r\n           \r\n           <div class=\"data-info\">\r\n           <h4>Population:</h4>\r\n           <span>${(data[0].population / 1000000).toFixed(1)} m</span>\r\n                 </div>\r\n                 \r\n                 <div class=\"data-info\">\r\n                 <h4>Continent:</h4>\r\n                 <span>${data[0].continents[0]}</span>\r\n                 </div>\r\n                 \r\n                 <div class=\"data-info\">\r\n                 <h4>Currencies:</h4>\r\n                 <span>${\r\n                     data[0].currencies[Object.keys(data[0].currencies)].name\r\n                 } - ${Object.keys(data[0].currencies)}</span>\r\n                  </div>\r\n                  \r\n                  <div class=\"data-info\">\r\n                  <h4>Language:</h4>\r\n                  <span>${\r\n                      data[0].languages[Object.keys(data[0].languages)]\r\n                  }</span>\r\n                  </div>\r\n              </div>`;\r\n        } catch (err) {\r\n            result.innerHTML = `<h3>${err.message}</h3>`;\r\n        }\r\n    };\r\n    countryName(countryValue);\r\n};\r\n\r\n//Random country\r\n\r\nconst getRandomCountry = function () {\r\n    let result = document.getElementById(\"result\");\r\n    const randomCountry = async function () {\r\n        let all = await fetch(`https://restcountries.com/v3.1/all`);\r\n        let data = await all.json();\r\n        const randomData = data[random(0, data.length)];\r\n        // console.log(data);\r\n\r\n        try {\r\n            result.innerHTML = `\r\n            <img src=\"${randomData.flags.svg}\" class=\"flag-img\">\r\n            <div class=\"info\">\r\n            <h2>${randomData.name.common}</h2>\r\n            <div class=\"data-info\">\r\n            <h4>Capital:</h4>\r\n            <span>${randomData.capital[0]}</span>\r\n            </div>\r\n            \r\n            <div class=\"data-info\">\r\n            <h4>Population:</h4>\r\n            <span>${(randomData.population / 1000000).toFixed(1)} m</span>\r\n               </div>\r\n               \r\n               <div class=\"data-info\">\r\n               <h4>Continent:</h4>\r\n               <span>${randomData.continents[0]}</span>\r\n               </div>\r\n\r\n               <div class=\"data-info\">\r\n               <h4>Currencies:</h4>\r\n               <span>${\r\n                   randomData.currencies[Object.keys(randomData.currencies)]\r\n                       .name\r\n               } - ${Object.keys(randomData.currencies)}</span>\r\n               </div>\r\n               \r\n               <div class=\"data-info\">\r\n               <h4> Language:</h4>\r\n               <span>${\r\n                   randomData.languages[Object.keys(randomData.languages)]\r\n               } </span>\r\n               </div>\r\n               </div>`;\r\n        } catch (err) {\r\n            result.innerHTML = `<h3>Something went wrong! Try again!</h3>`;\r\n        }\r\n    };\r\n    randomCountry();\r\n};\r\n\r\nrandomBtn.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    getRandomCountry();\r\n    countryInp.value = \"\";\r\n    countryInp.focus();\r\n});\r\n\r\nsearchBtn.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    getCountry();\r\n    countryInp.value = \"\";\r\n    countryInp.focus();\r\n});\r\n\r\ncountryInp.addEventListener('submit', getCountry())\r\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}